"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const inspect_1 = require("./logger/inspect");
const status_code_1 = require("./server/status-code");
const core_1 = require("./core");
/**
 * @since 1.0.0
 * @class
 * @name HttpException
 * @param {Number} code status code
 * @param {String} message
 * @param {Object} data
 * @constructor
 * @description
 * HttpException use it in endpoint actions
 */
class HttpError extends Error {
    constructor(code, message, data) {
        super(message);
        this.code = code;
        if (core_1.isTruthy(data)) {
            this.stack += "\n\nDATA: " + inspect_1.inspect(data, 5);
        }
        this.stack += "\n\nCODE: " + inspect_1.inspect(code, 5);
    }
    static merge(error) {
        if (!(error instanceof HttpError)) {
            let _error = error;
            error = new HttpError(status_code_1.Status.Internal_Server_Error, _error.message, {});
            error.stack = _error.stack;
        }
        return error;
    }
    getMessage() {
        return this.message;
    }
    getCode() {
        return this.code;
    }
    toString() {
        return this.stack;
    }
}
exports.HttpError = HttpError;
//# sourceMappingURL=error.js.map