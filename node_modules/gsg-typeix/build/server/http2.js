"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const http2_1 = require("http2");
const logger_1 = require("../logger/logger");
const core_1 = require("../core");
const bootstrap_1 = require("./bootstrap");
const metadata_1 = require("../injector/metadata");
/**
 * @since 2.0.0
 * @function
 * @name http2Server
 * @param {Function} Class Root application module to bootstrap
 * @param {HttpOptions} options Additional HTTP Server options
 * @returns {Injector}
 *
 * @description
 * Run the HTTP2 server for a given root module.
 */
function http2Server(Class, options) {
    let metadata = metadata_1.Metadata.getComponentConfig(Class);
    // override bootstrap module
    metadata.name = bootstrap_1.BOOTSTRAP_MODULE;
    // set module config
    metadata_1.Metadata.setComponentConfig(Class, metadata);
    let modules = bootstrap_1.createModule(Class);
    let injector = bootstrap_1.getModule(modules).injector;
    let logger = injector.get(logger_1.Logger);
    const server = http2_1.createSecureServer(options.serverOptions);
    server.on("request", (request, response) => bootstrap_1.fireRequest(modules, request, response));
    if (core_1.isString(options.hostname)) {
        server.listen(options.port, options.hostname);
    }
    else {
        server.listen(options.port);
    }
    logger.info("Module.info: Server started", options);
    server.on("error", (e) => logger.error(e.stack));
    return modules;
}
exports.http2Server = http2Server;
//# sourceMappingURL=http2.js.map